// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.17929
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace AcceptanceTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class DefiniceNaradiFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Definice nářadí.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("cs-CZ"), "Definice nářadí", "Jako správce skladu chci přidat nářadí do seznamu", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Definice nářadí")))
            {
                AcceptanceTests.DefiniceNaradiFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Definice pomocí všech tří součástí")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Definice nářadí")]
        public virtual void DefinicePomociVsechTriSoucasti()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Definice pomocí všech tří součástí", ((string[])(null)));
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
 testRunner.Given("je seznam nářadí prázdný", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Pokud ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Výkres",
                        "3-26-006"});
            table14.AddRow(new string[] {
                        "Rozměr",
                        "TCMT1102xx"});
            table14.AddRow(new string[] {
                        "Druh",
                        "Držák plátku"});
#line 6
 testRunner.When("definuji nové nářadí pro seznam s těmito hodnotami:", ((string)(null)), table14, "Když ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Výkres",
                        "Rozměr",
                        "Druh"});
            table15.AddRow(new string[] {
                        "3-26-006",
                        "TCMT1102xx",
                        "Držák plátku"});
#line 10
 testRunner.Then("seznam nářadí tvoří:", ((string)(null)), table15, "Pak ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Rozměr a druh není nutné zadávat")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Definice nářadí")]
        public virtual void RozmerADruhNeniNutneZadavat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Rozměr a druh není nutné zadávat", ((string[])(null)));
#line 14
this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("je seznam nářadí prázdný", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Pokud ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Výkres",
                        "3-26-006"});
            table16.AddRow(new string[] {
                        "Rozměr",
                        ""});
            table16.AddRow(new string[] {
                        "Druh",
                        ""});
#line 16
 testRunner.When("definuji nové nářadí pro seznam s těmito hodnotami:", ((string)(null)), table16, "Když ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Výkres",
                        "Rozměr",
                        "Druh"});
            table17.AddRow(new string[] {
                        "3-26-006",
                        "",
                        ""});
#line 20
 testRunner.Then("seznam nářadí tvoří:", ((string)(null)), table17, "Pak ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Výkres je nutné zadat")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Definice nářadí")]
        public virtual void VykresJeNutneZadat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Výkres je nutné zadat", ((string[])(null)));
#line 24
this.ScenarioSetup(scenarioInfo);
#line 25
 testRunner.Given("je seznam nářadí prázdný", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Pokud ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Výkres",
                        ""});
            table18.AddRow(new string[] {
                        "Rozměr",
                        "TCMT1102xx"});
            table18.AddRow(new string[] {
                        "Druh",
                        "Držák plátku"});
#line 26
 testRunner.When("definuji nové nářadí pro seznam s těmito hodnotami:", ((string)(null)), table18, "Když ");
#line 30
 testRunner.Then("dostanu varování, že není možné definovat nářadí bez výkresu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Pak ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Kombinace výkresu a rozměru musí být unikátní")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Definice nářadí")]
        public virtual void KombinaceVykresuARozmeruMusiBytUnikatni()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Kombinace výkresu a rozměru musí být unikátní", ((string[])(null)));
#line 32
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Výkres",
                        "Rozměr",
                        "Druh"});
            table19.AddRow(new string[] {
                        "3-26-006",
                        "TCMT1102xx",
                        "Držák plátku"});
            table19.AddRow(new string[] {
                        "4-41-073",
                        "průměr 25/5,8",
                        "Opěrka hlavy"});
#line 33
 testRunner.Given("seznam nářadí tvoří:", ((string)(null)), table19, "Pokud ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Výkres",
                        "3-26-006"});
            table20.AddRow(new string[] {
                        "Rozměr",
                        "TCMT1102xx"});
            table20.AddRow(new string[] {
                        "Druh",
                        ""});
#line 37
 testRunner.When("definuji nové nářadí pro seznam s těmito hodnotami:", ((string)(null)), table20, "Když ");
#line 41
 testRunner.Then("dostanu varování, že není možné definovat nářadí, které už v seznamu existuje", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Pak ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Celá kombinace výkresu a rozměru musí být unikátní, rozdíl i v jedné z hodnot zaj" +
            "istí unikátnost")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Definice nářadí")]
        public virtual void CelaKombinaceVykresuARozmeruMusiBytUnikatniRozdilIVJedneZHodnotZajistiUnikatnost()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Celá kombinace výkresu a rozměru musí být unikátní, rozdíl i v jedné z hodnot zaj" +
                    "istí unikátnost", ((string[])(null)));
#line 43
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Výkres",
                        "Rozměr",
                        "Druh"});
            table21.AddRow(new string[] {
                        "3-26-006",
                        "TCMT1102xx",
                        "Držák plátku"});
            table21.AddRow(new string[] {
                        "4-41-073",
                        "průměr 25/5,8",
                        "Opěrka hlavy"});
#line 44
 testRunner.Given("seznam nářadí tvoří:", ((string)(null)), table21, "Pokud ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Výkres",
                        "3-26-006"});
            table22.AddRow(new string[] {
                        "Rozměr",
                        ""});
            table22.AddRow(new string[] {
                        "Druh",
                        ""});
#line 48
 testRunner.When("definuji nové nářadí pro seznam s těmito hodnotami:", ((string)(null)), table22, "Když ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Výkres",
                        "Rozměr",
                        "Druh"});
            table23.AddRow(new string[] {
                        "3-26-006",
                        "TCMT1102xx",
                        "Držák plátku"});
            table23.AddRow(new string[] {
                        "3-26-006",
                        "",
                        ""});
            table23.AddRow(new string[] {
                        "4-41-073",
                        "průměr 25/5,8",
                        "Opěrka hlavy"});
#line 52
 testRunner.Then("seznam nářadí tvoří:", ((string)(null)), table23, "Pak ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
